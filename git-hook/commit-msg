#!/usr/bin/env python3
import sys
import subprocess
import requests

MICROSERVICE_URL = "http://localhost:5000/analyze-commit"

def get_staged_diff():
    return subprocess.check_output(['git', 'diff', '--cached']).decode('utf-8')

def get_commit_message(commit_msg_file):
    with open(commit_msg_file, 'r') as f:
        return f.read()

def update_commit_message(commit_msg_file, new_message):
    with open(commit_msg_file, 'w') as f:
        f.write(new_message)

def main():
    commit_msg_file = sys.argv[1]
    staged_diff = get_staged_diff()
    current_msg = get_commit_message(commit_msg_file)

    try:
        response = requests.post(MICROSERVICE_URL, json={
            'diff': staged_diff,
            'current_message': current_msg
        })
        response.raise_for_status()
        result = response.json()

        if result['status'] == 'success':
            update_commit_message(commit_msg_file, result['message'])
            print("Commit message updated based on analysis.")
        else:
            print("Analysis failed. Using original commit message.")
    except requests.RequestException as e:
        print(f"Error communicating with microservice: {e}")
        print("Using original commit message.")

if __name__ == "__main__":
    main()
